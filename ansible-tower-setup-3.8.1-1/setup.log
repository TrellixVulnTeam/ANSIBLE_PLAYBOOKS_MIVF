[0;34mNo config file found; using defaults[0m
[1;35m[WARNING]: Could not match supplied host pattern, ignoring: instance_group_*[0m
[1;35m[WARNING]: Could not match supplied host pattern, ignoring: isolated_group_*[0m

PLAY [tower:automationhub:database:instance_group_*:isolated_group_*] **********

TASK [check_config_static : Ensure expected variables are defined] *************
[0;36mskipping: [localhost] => (item=tower_package_name)  => {"ansible_loop_var": "item", "changed": false, "item": "tower_package_name", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [localhost] => (item=tower_package_version)  => {"ansible_loop_var": "item", "changed": false, "item": "tower_package_version", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [localhost] => (item=tower_package_release)  => {"ansible_loop_var": "item", "changed": false, "item": "tower_package_release", "skip_reason": "Conditional result was False"}[0m

TASK [check_config_static : Ensure cluster hosts are not localhost] ************
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [check_config_static : Check that controller uses queue name and not group name] ***
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [check_config_static : Check that group names do not conflict with instance names] ***
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [check_config_static : Detect unsupported HA inventory file] **************
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [check_config_static : Ensure at least one tower host or one automationhub host is defined] ***
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [check_config_static : Check that no instance groups are named tower] *****
[0;36mskipping: [localhost] => (item=all)  => {"ansible_loop_var": "item", "changed": false, "item": "all", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [localhost] => (item=ungrouped)  => {"ansible_loop_var": "item", "changed": false, "item": "ungrouped", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [localhost] => (item=tower)  => {"ansible_loop_var": "item", "changed": false, "item": "tower", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [localhost] => (item=automationhub)  => {"ansible_loop_var": "item", "changed": false, "item": "automationhub", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [localhost] => (item=database)  => {"ansible_loop_var": "item", "changed": false, "item": "database", "skip_reason": "Conditional result was False"}[0m

TASK [check_config_static : Ensure only one database host exists] **************
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [check_config_static : Ensure only one automationhub host exists] *********
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [check_config_static : Ensure Automation Hub and Tower are installed on different nodes] ***
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [check_config_static : Ensure when postgres host is defined that the port is defined] ***
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [check_config_static : Ensure that when a database host is specified, that pg_host or automationhub_pg_host is defined] ***
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [check_config_static : Ensure that when a database host is specified, that pg_port or automationhub_pg_port is defined] ***
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [check_config_static : Ensure that pg_hashed_password is not set] *********
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [check_config_static : Ensure that if we have web cert, we also have key] ***
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [check_config_static : Preflight check - verify certificates for Postgres SSL install] ***
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [check_config_static : HA mode requires an external postgres database with pg_host defined] ***
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [check_config_static : HA mode requires an external postgres database with pg_port defined] ***
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [config_dynamic : Set database to internal or external] *******************
[0;32mok: [localhost] => {"ansible_facts": {"config_dynamic_database": "internal"}, "changed": false}[0m

TASK [config_dynamic : Automation Hub | Set database to internal or external] ***
[0;32mok: [localhost] => {"ansible_facts": {"automationhub_config_dynamic_database": "1"}, "changed": false}[0m

TASK [config_dynamic : Tower database decision] ********************************
[0;32mok: [localhost] => {[0m
[0;32m    "config_dynamic_database": "internal"[0m
[0;32m}[0m

TASK [config_dynamic : Automation Hub database decision] ***********************
[0;32mok: [localhost] => {[0m
[0;32m    "automationhub_config_dynamic_database": "1"[0m
[0;32m}[0m

TASK [config_dynamic : Set postgres host and port to local if not set] *********
[0;32mok: [localhost] => {"ansible_facts": {"pg_host": "127.0.0.1", "pg_port": 5432}, "changed": false}[0m

TASK [config_dynamic : Ensure connectivity to hosts and gather facts] **********
[0;32mok: [localhost][0m

TASK [config_dynamic : Ensure user is root] ************************************
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

PLAY [Group nodes by OS distribution] ******************************************

TASK [Gathering Facts] *********************************************************
[0;32mok: [localhost][0m

TASK [group hosts by distribution] *********************************************
[0;32mok: [localhost] => {"add_group": "Ubuntu_18", "changed": false, "parent_groups": ["all"]}[0m
[1;35m[WARNING]: Could not match supplied host pattern, ignoring: RedHat_7[0m
[1;35m[WARNING]: Could not match supplied host pattern, ignoring: CentOS_7[0m
[1;35m[WARNING]: Could not match supplied host pattern, ignoring: RedHat_8[0m
[1;35m[WARNING]: Could not match supplied host pattern, ignoring: CentOS_8[0m

PLAY [Group supported distributions] *******************************************
[0;36mskipping: no hosts matched[0m

PLAY [Group deprecated distributions] ******************************************
[0;36mskipping: no hosts matched[0m
[1;35m[WARNING]: Could not match supplied host pattern, ignoring: supported[0m

PLAY [Ensure all node OS distributions are supported] **************************

TASK [fail for unsupported distribution] ***************************************
[0;31mfatal: [localhost]: FAILED! => {"changed": false, "msg": "Ubuntu 18.04 is not a supported OS for an Ansible Automation Platform installation. Supported OSes include Red Hat Enterprise Linux 7.7+ and CentOS 7.7+."}[0m

PLAY RECAP *********************************************************************
[0;31mlocalhost[0m                  : [0;32mok=8   [0m changed=0    unreachable=0    [0;31mfailed=1   [0m [0;36mskipped=19  [0m rescued=0    ignored=0   

